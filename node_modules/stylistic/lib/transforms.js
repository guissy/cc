'use strict';

var _Object$keys = require('babel-runtime/core-js/object/keys')['default'];

exports.__esModule = true;
exports.getTransformFunction = getTransformFunction;
exports.getTransform = getTransform;

var _functions = require('./functions');

var properties = {
  translateX: true,
  translateY: true,
  translateZ: true,
  scaleX: true,
  scaleY: true,
  rotateX: true,
  rotateY: true,
  rotateZ: true
};

function getTransformFunction(_ref) {
  var tx = _ref.translateX;
  var ty = _ref.translateY;
  var tz = _ref.translateZ;
  var sx = _ref.scaleX;
  var sy = _ref.scaleY;
  var rx = _ref.rotateX;
  var ry = _ref.rotateY;
  var rz = _ref.rotateZ;

  var transforms = [];
  if (tz !== undefined) {
    transforms.push(_functions.translate3d(tx, ty, tz));
  } else if (tx !== undefined || ty !== undefined) {
    transforms.push(_functions.translate(tx, ty));
  }
  if (sx !== undefined || sy !== undefined) {
    transforms.push(_functions.scale(sx, sy));
  }
  if (rz !== undefined) {
    transforms.push(_functions.translate3d(rx, ry, rz));
  } else if (rx !== undefined || ry !== undefined) {
    transforms.push(_functions.translate(rx, ry));
  }
  return transforms.join(' ');
}

function getTransform(props) {
  var transformProps = {};
  var attributes = {};

  _Object$keys(props).forEach(function (prop) {
    var val = props[prop];
    if (val === undefined || val === null) return;
    if (!properties[prop]) {
      attributes[prop] = val;
    } else {
      transformProps[prop] = val;
    }
  });

  var transform = getTransformFunction(transformProps);
  return { transform: transform, attributes: attributes };
}