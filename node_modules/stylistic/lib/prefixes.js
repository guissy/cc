'use strict';

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

exports.__esModule = true;
exports.prefix = prefix;
var properties = {
  'animation': ['Webkit'],
  'animationName': ['Webkit'],
  'animationDuration': ['Webkit'],
  'animationDelay': ['Webkit'],
  'animationDirection': ['Webkit'],
  'animationFillMode': ['Webkit'],
  'animationIterationCount': ['Webkit'],
  'animationPlayState': ['Webkit'],
  'animationTimingFunction': ['Webkit'],
  'transition': ['Webkit'],
  'transitionProperty': ['Webkit'],
  'transitionDuration': ['Webkit'],
  'transitionDelay': ['Webkit'],
  'transitionTimingFunction': ['Webkit'],
  'transform': ['Webkit'],
  'transformOrigin': ['Webkit'],
  'perspective': ['Webkit'],
  'perspectiveOrigin': ['Webkit'],
  'transformStyle': ['Webkit'],
  'backfaceVisibility': ['Webkit'],
  'borderImage': ['Webkit', 'O'],
  'mask': ['Webkit'],
  'maskImage': ['Webkit'],
  'filter': ['Webkit'],
  'backdropFilter': ['Webkit'],
  'columns': ['Webkit', 'Moz'],
  'columnWidth': ['Webkit', 'Moz'],
  'columnGap': ['Webkit', 'Moz'],
  'columnRule': ['Webkit', 'Moz'],
  'columnRuleColor': ['Webkit', 'Moz'],
  'columnRuleWidth': ['Webkit', 'Moz'],
  'columnCount': ['Webkit', 'Moz'],
  'columnRuleStyle': ['Webkit', 'Moz'],
  'columnSpan': ['Webkit', 'Moz'],
  'columnFill': ['Webkit', 'Moz'],
  'breakBefore': ['Webkit', 'Moz'],
  'breakAfter': ['Webkit', 'Moz'],
  'breakInside': ['Webkit', 'Moz'],
  'userSelect': ['Webkit', 'Moz', 'ms'],
  'flex': ['Webkit'],
  'flexGrow': ['Webkit'],
  'flexShrink': ['Webkit'],
  'flexBasis': ['Webkit'],
  'flexDirection': ['Webkit'],
  'flexWrap': ['Webkit'],
  'flexFlow': ['Webkit'],
  'justifyContent': ['Webkit'],
  'order': ['Webkit'],
  'alignItems': ['Webkit'],
  'alignSelf': ['Webkit'],
  'alignContent': ['Webkit'],
  'fontFeatureSettings': ['Webkit'],
  'fontVariantLigatures': ['Webkit'],
  'fontLanguageOverride': ['Webkit'],
  'fontKerning': ['Webkit'],
  'hyphens': ['Webkit', 'Moz', 'ms'],
  'tabSize': ['Moz', 'O'],
  'textDecorationStyle': ['Webkit'],
  'textDecorationLine': ['Webkit'],
  'textDecorationColor': ['Webkit'],
  'textSizeAdjust': ['Webkit'],
  'maskClip': ['Webkit'],
  'maskComposite': ['Webkit'],
  'maskOrigin': ['Webkit'],
  'maskRepeat': ['Webkit'],
  'maskBorderRepeat': ['Webkit'],
  'maskBorderSource': ['Webkit'],
  'clipPath': ['Webkit'],
  'maskPosition': ['Webkit'],
  'maskSize': ['Webkit'],
  'maskBorder': ['Webkit'],
  'maskBorderOutset': ['Webkit'],
  'maskBorderWidth': ['Webkit'],
  'maskBorderSlice': ['Webkit'],
  'boxDecorationBreak': ['Webkit'],
  'objectFit': ['O'],
  'objectPosition': ['O'],
  'shapeMargin': ['Webkit'],
  'shapeOutside': ['Webkit'],
  'shapeImageThreshold': ['Webkit'],
  'textEmphasis': ['Webkit'],
  'textAlignLast': ['Moz'],
  'imageRendering': ['ms'],
  'borderInlineStart': ['Webkit', 'Moz'],
  'borderInlineEnd': ['Webkit', 'Moz'],
  'marginInlineStart': ['Webkit', 'Moz'],
  'marginInlineEnd': ['Webkit', 'Moz'],
  'paddingInlineStart': ['Webkit', 'Moz'],
  'paddingInlineEnd': ['Webkit', 'Moz'],
  'borderBlockStart': ['Webkit'],
  'borderBlockEnd': ['Webkit'],
  'marginBlockStart': ['Webkit'],
  'marginBlockEnd': ['Webkit'],
  'paddingBlockStart': ['Webkit'],
  'paddingBlockEnd': ['Webkit'],
  'appearance': ['Webkit', 'Moz'],
  'scrollSnapType': ['Webkit', 'ms'],
  'scrollSnapCoordinate': ['Webkit', 'ms'],
  'scrollSnapDestination': ['Webkit', 'ms'],
  'scrollSnapPointsX': ['Webkit', 'ms'],
  'scrollSnapPointsY': ['Webkit', 'ms'],
  'flowInto': ['Webkit', 'ms'],
  'flowFrom': ['Webkit', 'ms'],
  'regionFragment': ['Webkit', 'ms'],
  'writingMode': ['Webkit', 'ms'],
  'textEmphasisPosition': ['Webkit'],
  'textEmphasisStyle': ['Webkit'],
  'textEmphasisColor': ['Webkit'],
  'gridTemplateColumns': ['ms'],
  'gridTemplateRows': ['ms'],
  'gridColumn': ['ms'],
  'gridRow': ['ms'],
  'gridColumnEnd': ['ms'],
  'gridRowEnd': ['ms'],
  'gridColumnStart': ['ms'],
  'gridRowStart': ['ms'],
  'justifyItems': ['ms'],
  'gridRowAlign': ['ms'],
  'textSpacing': ['ms']
};

var values = {
  'Webkit': ['linear-gradient', 'repeating-linear-gradient', 'radial-gradient', 'repeating-radial-gradient', 'filter', 'image-set', 'cross-fade', 'flex', 'inline-flex', 'max-content', 'min-content', 'fit-content', 'fill', 'fill-available', 'grab', 'grabbing', 'sticky', 'pixelated'],
  'Moz': ['element', 'max-content', 'min-content', 'fit-content', 'fill', 'fill-available', 'pixelated'],
  'ms': ['grid', 'inline-grid'],
  'O': []
};

for (var value in values) {
  values[value] = new RegExp('(' + values[value].join('|') + ')', 'g');
}

function prefixValue(value) {
  return value.replace(values[vendorPrefix], '-' + vendorPrefix.toLowerCase() + '-$1');
}

function uppercaseFirst(s) {
  if (!s.length) return '';
  return s.charAt(0).toUpperCase() + s.substring(1);
}

function prefix(styles) {
  var result = {};
  for (var prop in styles) {
    if (properties[prop]) {
      for (var _iterator = properties[prop], _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var _prefix = _ref;

        result[_prefix + uppercaseFirst(prop)] = styles[prop];
      }
    }
    result[prop] = styles[prop];
  }
  return result;
}